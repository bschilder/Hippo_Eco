gb <- gt
for (node in shiftDF$Nodes){
print(node)
nodeSub <- shiftDF[shiftDF$Nodes==node,]
age_reverse <-  65-nodeSub$Dates
gb <- gb +
geom_vline(xintercept=age_reverse, color = "black", size=5, alpha=.2, show.legend = T)  +
# annotate("rect", xmin = age-5, xmax=age+5,ymax=44, ymin = -10, alpha = .2) +
annotate("label", x =age_reverse, y = -5, fill="black", alpha=.8, color="white",
# label = paste(nodeSub$Clade,
#         nodeSub$Events,
#         paste(nodeSub$Dates,"MYA"),
#         sep="\n")
label = paste('atop(bold("',nodeSub$Clade,'"),"', nodeSub$Events, paste(nodeSub$Dates,"MYA"),'")', sep=""), parse=T
)
}
gb
gb <- gt
for (node in shiftDF$Nodes){
print(node)
nodeSub <- shiftDF[shiftDF$Nodes==node,]
age_reverse <-  65-nodeSub$Dates
gb <- gb +
geom_vline(xintercept=age_reverse, color = "black", size=5, alpha=.2, show.legend = T)  +
# annotate("rect", xmin = age-5, xmax=age+5,ymax=44, ymin = -10, alpha = .2) +
annotate("label", x =age_reverse, y = -5, fill="black", alpha=.8, color="white",
# label = paste(nodeSub$Clade,
#         nodeSub$Events,
#         paste(nodeSub$Dates,"MYA"),
#         sep="\n")
label = paste('atop(bold("',nodeSub$Clade,'"),"\n', nodeSub$Events, paste("\n",nodeSub$Dates,"MYA"),'")', sep=""), parse=T
)
}
gb
gb <- gt
for (node in shiftDF$Nodes){
print(node)
nodeSub <- shiftDF[shiftDF$Nodes==node,]
age_reverse <-  65-nodeSub$Dates
gb <- gb +
geom_vline(xintercept=age_reverse, color = "black", size=5, alpha=.2, show.legend = T)  +
# annotate("rect", xmin = age-5, xmax=age+5,ymax=44, ymin = -10, alpha = .2) +
annotate("label", x =age_reverse, y = -5, fill="black", alpha=.8, color="white",
# label = paste(nodeSub$Clade,
#         nodeSub$Events,
#         paste(nodeSub$Dates,"MYA"),
#         sep="\n")
label = paste('atop(bold("',nodeSub$Clade,'"),"\n', nodeSub$Events, paste("\n",nodeSub$Dates,"MYA"),'")', sep=""), parse=T
)
}
gb
gb <- gt
for (node in shiftDF$Nodes){
print(node)
nodeSub <- shiftDF[shiftDF$Nodes==node,]
age_reverse <-  65-nodeSub$Dates
gb <- gb +
geom_vline(xintercept=age_reverse, color = "black", size=5, alpha=.2, show.legend = T)  +
# annotate("rect", xmin = age-5, xmax=age+5,ymax=44, ymin = -10, alpha = .2) +
annotate("label", x =age_reverse, y = -5, fill="black", alpha=.8, color="white",
# label = paste(nodeSub$Clade,
#         nodeSub$Events,
#         paste(nodeSub$Dates,"MYA"),
#         sep="\n")
label = paste('atop(bold("',nodeSub$Clade,'"),"\n', nodeSub$Events, paste("\n",nodeSub$Dates,"MYA"),'")', sep=""), parse=T
)
}
gb
gb
for (node in shiftDF$Nodes){
print(node)
nodeSub <- shiftDF[shiftDF$Nodes==node,]
age_reverse <-  65-nodeSub$Dates
gb <- gb +
geom_vline(xintercept=age_reverse, color = "black", size=5, alpha=.2, show.legend = T)  +
# annotate("rect", xmin = age-5, xmax=age+5,ymax=44, ymin = -10, alpha = .2) +
annotate("label", x =age_reverse, y = -5, fill="black", alpha=.8, color="white",
# label = paste(nodeSub$Clade,
#         nodeSub$Events,
#         paste(nodeSub$Dates,"MYA"),
#         sep="\n")
label = paste('atop(bold("',nodeSub$Clade,'"),"', nodeSub$Events, paste("\n",nodeSub$Dates,"MYA"),'")', sep=""), parse=T
)
}
gb
library(grid)
gb <- gt
for (node in shiftDF$Nodes){
print(node)
nodeSub <- shiftDF[shiftDF$Nodes==node,]
age_reverse <-  65-nodeSub$Dates
gb <- gb +
geom_vline(xintercept=age_reverse, color = "black", size=5, alpha=.2, show.legend = T)  +
# annotate("rect", xmin = age-5, xmax=age+5,ymax=44, ymin = -10, alpha = .2) +
annotate("label", x =age_reverse, y = -5, fill="black", alpha=.8, color="white",
# label = paste(nodeSub$Clade,
#         nodeSub$Events,
#         paste(nodeSub$Dates,"MYA"),
#         sep="\n")
label = paste('atop(bold("',nodeSub$Clade,'"),"', nodeSub$Events, paste("\n",nodeSub$Dates,"MYA"),'")', sep=""), parse=T
)
}
gb
library(grid)
gb <- gt
for (node in shiftDF$Nodes){
print(node)
nodeSub <- shiftDF[shiftDF$Nodes==node,]
age_reverse <-  65-nodeSub$Dates
gb <- gb +
geom_vline(xintercept=age_reverse, color = "black", size=5, alpha=.2, show.legend = T)  +
# annotate("rect", xmin = age-5, xmax=age+5,ymax=44, ymin = -10, alpha = .2) +
annotate("label", x =age_reverse, y = -5, fill="black", alpha=.8, color="white",
# label = paste(nodeSub$Clade,
#         nodeSub$Events,
#         paste(nodeSub$Dates,"MYA"),
#         sep="\n")
label = paste('atop(bold("',nodeSub$Clade,'"),"\n', nodeSub$Events, paste("\n",nodeSub$Dates,"MYA"),'")', sep=""), parse=T
)
}
gb
library(grid)
gb <- gt
for (node in shiftDF$Nodes){
print(node)
nodeSub <- shiftDF[shiftDF$Nodes==node,]
age_reverse <-  65-nodeSub$Dates
gb <- gb +
geom_vline(xintercept=age_reverse, color = "black", size=5, alpha=.2, show.legend = T)  +
# annotate("rect", xmin = age-5, xmax=age+5,ymax=44, ymin = -10, alpha = .2) +
annotate("label", x =age_reverse, y = -5, fill="black", alpha=.8, color="white",
# label = paste(nodeSub$Clade,
#         nodeSub$Events,
#         paste(nodeSub$Dates,"MYA"),
#         sep="\n")
label = paste('atop(bold("',nodeSub$Clade,'"),"', nodeSub$Events, paste(nodeSub$Dates,"MYA"),'")', sep=""), parse=T
)
}
gb
library(grid)
gb <- gt
for (node in shiftDF$Nodes){
print(node)
nodeSub <- shiftDF[shiftDF$Nodes==node,]
age_reverse <-  65-nodeSub$Dates
gb <- gb +
geom_vline(xintercept=age_reverse, color = "black", size=5, alpha=.2, show.legend = T)  +
# annotate("rect", xmin = age-5, xmax=age+5,ymax=44, ymin = -10, alpha = .2) +
annotate("label", x =age_reverse, y = -5, fill="black", alpha=.8, color="white",
# label = paste(nodeSub$Clade,
#         nodeSub$Events,
#         paste(nodeSub$Dates,"MYA"),
#         sep="\n")
label = paste('atop(bold("',nodeSub$Clade,'"),"', nodeSub$Events, paste(nodeSub$Dates,"MYA"),'")', sep=""), parse=T
)
}
gb
library(grid)
gb <- gt
for (node in shiftDF$Nodes){
print(node)
nodeSub <- shiftDF[shiftDF$Nodes==node,]
age_reverse <-  65-nodeSub$Dates
gb <- gb +
geom_vline(xintercept=age_reverse, color = "black", size=5, alpha=.2, show.legend = T)  +
# annotate("rect", xmin = age-5, xmax=age+5,ymax=44, ymin = -10, alpha = .2) +
annotate("label", x =age_reverse, y = -5, fill="black", alpha=.8, color="white",
# label = paste(nodeSub$Clade,
#         nodeSub$Events,
#         paste(nodeSub$Dates,"MYA"),
#         sep="\n")
label = paste('atop(bold("',nodeSub$Clade,'"),"', nodeSub$Events, paste(nodeSub$Dates,"MYA"),'")', sep=""), parse=T
)
}
gb
gb <- gt
for (node in shiftDF$Nodes){
print(node)
nodeSub <- shiftDF[shiftDF$Nodes==node,]
age_reverse <-  65-nodeSub$Dates
gb <- gb +
geom_vline(xintercept=age_reverse, color = "black", size=5, alpha=.2, show.legend = T)  +
# annotate("rect", xmin = age-5, xmax=age+5,ymax=44, ymin = -10, alpha = .2) +
annotate("label", x =age_reverse, y = -5, fill="black", alpha=.8, color="white",
# label = paste(nodeSub$Clade,
#         nodeSub$Events,
#         paste(nodeSub$Dates,"MYA"),
#         sep="\n")
label = paste('atop(bold("',nodeSub$Clade,'"),"', nodeSub$Events, paste("\n",nodeSub$Dates,"MYA"),'")', sep=""), parse=T
)
}
gb
gb <- gt
for (node in shiftDF$Nodes){
print(node)
nodeSub <- shiftDF[shiftDF$Nodes==node,]
age_reverse <-  65-nodeSub$Dates
gb <- gb +
geom_vline(xintercept=age_reverse, color = "black", size=5, alpha=.2, show.legend = T)  +
# annotate("rect", xmin = age-5, xmax=age+5,ymax=44, ymin = -10, alpha = .2) +
annotate("label", x =age_reverse, y = -5, fill="black", alpha=.8, color="white",
# label = paste(nodeSub$Clade,
#         nodeSub$Events,
#         paste(nodeSub$Dates,"MYA"),
#         sep="\n")
label = paste('atop(bold("',nodeSub$Clade,'"),"', nodeSub$Events, paste("\n",nodeSub$Dates,"MYA"),'")', sep=""), parse=T
)
}
gb
library(grid)
gb <- gt
for (node in shiftDF$Nodes){
print(node)
nodeSub <- shiftDF[shiftDF$Nodes==node,]
age_reverse <-  65-nodeSub$Dates
gb <- gb +
geom_vline(xintercept=age_reverse, color = "black", size=5, alpha=.2, show.legend = T)  +
# annotate("rect", xmin = age-5, xmax=age+5,ymax=44, ymin = -10, alpha = .2) +
annotate("label", x =age_reverse, y = -5, fill="black", alpha=.8, color="white",
# label = paste(nodeSub$Clade,
#         nodeSub$Events,
#         paste(nodeSub$Dates,"MYA"),
#         sep="\n")
label = paste('atop(bold("',nodeSub$Clade,'"),"', nodeSub$Events, paste("\n",nodeSub$Dates,"MYA"),'")', sep=""), parse=T
)
}
gb
library(grid)
gb <- gt
for (node in shiftDF$Nodes){
print(node)
nodeSub <- shiftDF[shiftDF$Nodes==node,]
age_reverse <-  65-nodeSub$Dates
gb <- gb +
geom_vline(xintercept=age_reverse, color = "black", size=5, alpha=.2, show.legend = T)  +
# annotate("rect", xmin = age-5, xmax=age+5,ymax=44, ymin = -10, alpha = .2) +
annotate("label", x =age_reverse, y = -5, fill="black", alpha=.8, color="white",
# label = paste(nodeSub$Clade,
#         nodeSub$Events,
#         paste(nodeSub$Dates,"MYA"),
#         sep="\n")
label = paste('atop(bold("',nodeSub$Clade,'"),"', nodeSub$Events, paste("\n",nodeSub$Dates,"MYA"),'")', sep=""), parse=T
)
}
gb
gb
library(grid)
gb <- gt
for (node in shiftDF$Nodes){
print(node)
nodeSub <- shiftDF[shiftDF$Nodes==node,]
age_reverse <-  65-nodeSub$Dates
gb <- gb +
geom_vline(xintercept=age_reverse, color = "black", size=5, alpha=.2, show.legend = T)  +
# annotate("rect", xmin = age-5, xmax=age+5,ymax=44, ymin = -10, alpha = .2) +
annotate("label", x =age_reverse, y = -5, fill="black", alpha=.8, color="white",
# label = paste(nodeSub$Clade,
#         nodeSub$Events,
#         paste(nodeSub$Dates,"MYA"),
#         sep="\n")
label = paste('atop(bold("',nodeSub$Clade,'"),"\n', nodeSub$Events, paste("\n",nodeSub$Dates,"MYA"),'")', sep=""), parse=T
)
}
gb
for (node in shiftDF$Nodes){
print(node)
nodeSub <- shiftDF[shiftDF$Nodes==node,]
age_reverse <-  65-nodeSub$Dates
gb <- gb +
geom_vline(xintercept=age_reverse, color = "black", size=5, alpha=.2, show.legend = T)  +
# annotate("rect", xmin = age-5, xmax=age+5,ymax=44, ymin = -10, alpha = .2) +
annotate("label", x =age_reverse, y = -5, fill="black", alpha=.8, color="white",
label = paste(nodeSub$Clade,
nodeSub$Events,
paste(nodeSub$Dates,"MYA"),
sep="\n")
# label = paste('atop(bold("',nodeSub$Clade,'"),"\n', nodeSub$Events, paste("\n",nodeSub$Dates,"MYA"),'")', sep=""), parse=T
)
}
gb
gt <- ggtree(tree) +  #  aes(color=group, linetype=group)
# geom_cladelabel(node=apes, label="Apes", geom='label',color="red2", offset=offset, angle=angle, offset.text = offset.text) +
geom_hilight(node=apes, fill="red2", alpha=alpha) +
# geom_cladelabel(node=OWM, label="OWM", color="orange", offset=offset, angle=angle, offset.text = offset.text) +
geom_hilight(node=OWM, fill="orange", alpha=alpha) +
# geom_cladelabel(node=NWM, label="NWM", color="green", offset=offset, angle=angle,  offset.text = offset.text) +
geom_hilight(node=NWM, fill="green", alpha=alpha) +
# geom_cladelabel(node=tarsi, label="Tarsiiformes", color="blue", offset=offset, angle=angle,  offset.text = offset.text) +
geom_hilight(node=tarsi, fill="blue", alpha=alpha) +
# geom_cladelabel(node=strep, label="Strepsirrhines", color="purple", offset=offset, angle=angle,  offset.text = offset.text) +
geom_hilight(node=strep, fill="purple", alpha=alpha) +
geom_nodepoint() +
geom_hilight_encircle(node = 31, spread=.015, fill = "gold", s_shape= 1) +
# geom_tippoint() +
# geom_tiplab(offset = 5) +
geom_tiplab(aes(text= "+"), geom="text", offset=40, align=T, hjust=0) +
geom_tiplab( geom="label", offset=20,  align=T,  hjust=.5) +
# xlim(0, 120)  +
geom_text(aes(label=node.ages$ages), hjust=-.25) +
# geom_text(aes(label=node), hjust=-.25) +
theme_tree2(plot.margin = unit(c(0,5,1,1), "cm"), legend.position="right") +
labs(x="MYA")
gt
# Rearrange clades
gt <- ggtree::rotate(gt, node = 45)
gt <- ggtree::rotate(gt, node = 47)
gt <- ggtree::rotate(gt, node = 48)
library(grid)
gb <- gt
for (node in shiftDF$Nodes){
print(node)
nodeSub <- shiftDF[shiftDF$Nodes==node,]
age_reverse <-  65-nodeSub$Dates
gb <- gb +
geom_vline(xintercept=age_reverse, color = "black", size=5, alpha=.2, show.legend = T)  +
# annotate("rect", xmin = age-5, xmax=age+5,ymax=44, ymin = -10, alpha = .2) +
annotate("label", x =age_reverse, y = -5, fill="black", alpha=.8, color="white",
label = paste(nodeSub$Clade,
nodeSub$Events,
paste(nodeSub$Dates,"MYA"),
sep="\n")
# label = paste('atop(bold("',nodeSub$Clade,'"),"\n', nodeSub$Events, paste("\n",nodeSub$Dates,"MYA"),'")', sep=""), parse=T
)
}
gb
#plot_grid(c_vol, c_res)
plot_grid(gt, c_vol)
# load("Data/HippoEco_AllResults.RData")
# data.frame(sort(tree$tip.label))
dev.off()# Reset graphics state
# Get key node IDs
homo <- 31 #MRCA(tree, tip=c("Homo_sapiens", "Homo_sapiens"))
apes <- MRCA(tree, tip=c("Hylobates_lar", "Homo_sapiens"))
OWM <- MRCA(tree, tip=c("Pygathrix_nemaeus", "Cercopithecus_mitis"))
NWM <-  MRCA(tree, tip=c("Callicebus_moloch", "Alouatta_caraya"))
tarsi <- 44 #MRCA(tree, tip=c("Tarsius_bancanus", "Tarsius_bancanus"))
strep <-  MRCA(tree, tip=c("Galagoides_demidoff", "Microcebus_murinus"))
primates <- MRCA(tree, tip=c("Indri_indri", "Homo_sapiens"))
haplorrhines <- MRCA(tree, tip=c("Tarsius_bancanus", "Homo_sapiens"))
anthropoids <- MRCA(tree, tip=c("Callithrix_jacchus", "Homo_sapiens"))
catarrhines <- MRCA(tree, tip=c("Papio_anubis", "Homo_sapiens"))
Pan_Homo <- MRCA(tree, tip=c("Pan_troglodytes_verus", "Homo_sapiens"))
# Calculate the ages of all the nodes
tree <- HP$phy
node.ages <- tree.age(tree, 65, order = "past", fossil = F, digits = 1)
node.ages$ages[node.ages$ages == 0] <- ""
# Make shifts timeline
up <- sprintf('\u2191')
dn <- sprintf('\u2193')
CladeShifts <- c("Conserved Ancestral State",
"Haplorrhine Shifts",
"Anthropoid Shifts",
"Catarrhine Shifts",
"Pan-Homo Shifts",
"Homo Shifts")
shiftDF <- data.frame(Clade=factor(CladeShifts, levels=CladeShifts, ordered=T),
Events=c("SCZ, Fibers, FD, CA3, CA1",
paste(dn,"retroHP_res\n",up,"CA2_res"),
paste(up,"Hilus_res"),
paste(dn,"CA2_res"),
paste(up,"Sub_res"),
paste(up,"retroHP_res\n",dn,"Hilus_res")
),
Dates=c(65, 61.3, 41.7, 26.7, 5.5, .2),
Nodes=c(primates,
haplorrhines,
anthropoids,
catarrhines,
Pan_Homo,
homo)
)
angle = -90
offset = 40
offset.text = .3
alpha = .5
gt <- ggtree(tree) +  #  aes(color=group, linetype=group)
# geom_cladelabel(node=apes, label="Apes", geom='label',color="red2", offset=offset, angle=angle, offset.text = offset.text) +
geom_hilight(node=apes, fill="red2", alpha=alpha) +
# geom_cladelabel(node=OWM, label="OWM", color="orange", offset=offset, angle=angle, offset.text = offset.text) +
geom_hilight(node=OWM, fill="orange", alpha=alpha) +
# geom_cladelabel(node=NWM, label="NWM", color="green", offset=offset, angle=angle,  offset.text = offset.text) +
geom_hilight(node=NWM, fill="green", alpha=alpha) +
# geom_cladelabel(node=tarsi, label="Tarsiiformes", color="blue", offset=offset, angle=angle,  offset.text = offset.text) +
geom_hilight(node=tarsi, fill="blue", alpha=alpha) +
# geom_cladelabel(node=strep, label="Strepsirrhines", color="purple", offset=offset, angle=angle,  offset.text = offset.text) +
geom_hilight(node=strep, fill="purple", alpha=alpha) +
geom_nodepoint() +
geom_hilight_encircle(node = 31, spread=.015, fill = "gold", s_shape= 1) +
# geom_tippoint() +
# geom_tiplab(offset = 5) +
geom_tiplab(aes(text= "+"), geom="text", offset=40, align=T, hjust=0) +
geom_tiplab( geom="label", offset=20,  align=T,  hjust=.5) +
# xlim(0, 120)  +
geom_text(aes(label=node.ages$ages), hjust=-.25) +
# geom_text(aes(label=node), hjust=-.25) +
theme_tree2(plot.margin = unit(c(0,5,1,1), "cm"), legend.position="right") +
labs(x="MYA")
gt
# Rearrange clades
gt <- ggtree::rotate(gt, node = 45)
gt <- ggtree::rotate(gt, node = 47)
gt <- ggtree::rotate(gt, node = 48)
library(grid)
gb <- gt
for (node in shiftDF$Nodes){
print(node)
nodeSub <- shiftDF[shiftDF$Nodes==node,]
age_reverse <-  65-nodeSub$Dates
gb <- gb +
geom_vline(xintercept=age_reverse, color = "black", size=5, alpha=.2, show.legend = T)  +
# annotate("rect", xmin = age-5, xmax=age+5,ymax=44, ymin = -10, alpha = .2) +
annotate("label", x =age_reverse, y = -5, fill="black", alpha=.8, color="white",
label = paste(paste("[",nodeSub$Clade,"]"),
nodeSub$Events,
paste(nodeSub$Dates,"MYA"),
sep="\n")
# label = paste('atop(bold("',nodeSub$Clade,'"),"\n', nodeSub$Events, paste("\n",nodeSub$Dates,"MYA"),'")', sep=""), parse=T
)
}
gb
make_subfield_df <- function(subregion_names, gt){
subfield_df <-  HP$data %>% #
subset(select=c("Species_10K", subregion_names)) %>%
reshape2::melt(id.vars = c("Species_10K"), variable.name = "Subregion", value.name = "Volume") %>%
rename(label = Species_10K) %>% mutate(label = as.factor(label), Subregion = as.factor(Subregion))
# Get current order of tips
dtData <- gt$data %>% arrange(desc(y)) %>% subset(label %in% subfield_df$label) %>%
mutate(order = factor(1:length(label), levels = 1:length(label), ordered = T)) %>%
subset(select=c("label", "order"))
subfield_df_ord <- merge(subfield_df, dtData, by = "label") %>% arrange(order) %>%
mutate(label = factor(label, levels = dtData$label, ordered = T), label = factor(label, levels = dtData$label, ordered = T) )
return(subfield_df_ord)
}
# Absolute vol
subregions <-subregion_names <- c("Sub", "CA1", "CA2", "CA3", "Hilus", "FD", "EC","Fibers")
volumes_df <-make_subfield_df(subregions, gt)
# Residuals
residuals <- paste(subregions, "res", sep="_")
residuals_df <-make_subfield_df(residuals, gt)
# Col plot
c_vol <- ggplot(data=volumes_df, aes(x=label, y=Volume, fill=Subregion)) +
theme(plot.margin = unit(c(1.15,0,.25,0), "cm"),
axis.text.x = element_text(size=11), axis.text.y = element_blank()) +
geom_col(position = "fill") + labs(y="Proportional Volume", x="") +
coord_flip() +
scale_x_discrete(limits = rev(levels(volumes_df$label)) )
# c_res <-ggplot(data=residuals_df, aes(x=label, y=Volume, fill=Subregion)) +
#   geom_col(position = "fill") + labs(y="Proportions: Residuals", x="") +
#   coord_flip() +
#   scale_x_discrete(limits = rev(levels(residuals_df$label)) ) +
#   theme(plot.margin = unit(c(1,0,0,0), "cm"), text = element_text(size=12))
#plot_grid(c_vol, c_res)
plot_grid(gt, c_vol)
# ggplot() + ggstance::geom_colh(data = subfield_df, aes(x=Volume,y=id, fill=Subregion))
#
# library(ggstance)
# facet_plot(gt, panel = 'HP_Proportions', data = volumes_df,
#                geom = geom_colh,
#                mapping = aes(x = Volume, fill = Subregion), stat="identity")
shiftNodes <- c(apes, OWM, NWM, tarsi, strep)
image_info <- data.frame(node = shiftNodes,
images = rep("https://i.imgur.com/8VA9cYw.png", length(shiftNodes) )
)
phylopic_info <- data.frame(node = c(apes, OWM, NWM, tarsi, strep),
phylopic = c("0174801d-15a6-4668-bfe0-4c421fbe51e8", # Gibbon
"72f2f854-f3cd-4666-887c-35d5c256ab0f", # Baboon
"aceb287d-84cf-46f1-868c-4797c4ac54a8", # Spider monkey
"f598fb39-facf-43ea-a576-1861304b2fe4", #
"bac25f49-97a4-4aec-beb6-f542158ebd23"
),
species = c("Apes", "OWM", "NWM",
"Tarsiiformes", "Strepsirrhines"
))
gt %<+% phylopic_info + geom_nodelab(aes(image=phylopic), geom="phylopic",
alpha=.5, color='steelblue',nudge_x = -5)
# gt %<+% image_info + geom_nodelab(aes(image=images), geom="image", alpha=.7, color='green',nudge_x = -5)
make_subfield_df <- function(subregion_names, gt){
subfield_df <-  HP$data %>% #
subset(select=c("Species_10K", subregion_names)) %>%
reshape2::melt(id.vars = c("Species_10K"), variable.name = "Subregion", value.name = "Volume") %>%
rename(label = Species_10K) %>% mutate(label = as.factor(label), Subregion = as.factor(Subregion))
make_subfield_df
make_subfield_df <- function(subregion_names, gt){
subfield_df <-  HP$data %>% #
subset(select=c("Species_10K", subregion_names)) %>%
reshape2::melt(id.vars = c("Species_10K"), variable.name = "Subregion", value.name = "Volume") %>%
rename(label = Species_10K) %>% mutate(label = as.factor(label), Subregion = as.factor(Subregion))
# Get current order of tips
dtData <- gt$data %>% arrange(desc(y)) %>% subset(label %in% subfield_df$label) %>%
mutate(order = factor(1:length(label), levels = 1:length(label), ordered = T)) %>%
subset(select=c("label", "order"))
subfield_df_ord <- merge(subfield_df, dtData, by = "label") %>% arrange(order) %>%
mutate(label = factor(label, levels = dtData$label, ordered = T), label = factor(label, levels = dtData$label, ordered = T) )
return(subfield_df_ord)
}
# Absolute vol
subregions <-subregion_names <- c("Sub", "CA1", "CA2", "CA3", "Hilus", "FD", "EC","Fibers")
volumes_df <-make_subfield_df(subregions, gt)
# Residuals
residuals <- paste(subregions, "res", sep="_")
residuals_df <-make_subfield_df(residuals, gt)
# Col plot
c_vol <- ggplot(data=volumes_df, aes(x=label, y=Volume, fill=Subregion)) +
theme(plot.margin = unit(c(1.15,0,.25,0), "cm"),
axis.text.x = element_text(size=11), axis.text.y = element_blank()) +
geom_col(position = "fill") + labs(y="Proportional Volume", x="") +
coord_flip() +
scale_x_discrete(limits = rev(levels(volumes_df$label)) )
# Absolute vol
subregions <-subregion_names <- c("Sub", "CA1", "CA2", "CA3", "Hilus", "FD", "EC","Fibers")
volumes_df <-make_subfield_df(subregions, gt)
subregions
